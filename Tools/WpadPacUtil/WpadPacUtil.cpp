#include <Windows.h>
#include <stdio.h>
#include <stdint.h>
#include <winhttp.h>

#pragma comment(lib, "winhttp.lib")

int32_t wmain(int32_t nArgc, const wchar_t* pArgv[]) {
    HINTERNET hHttpSession = WinHttpOpen(L"WinHTTP AutoProxy Sample/1.0",
        WINHTTP_ACCESS_TYPE_NO_PROXY,
        WINHTTP_NO_PROXY_NAME,
        WINHTTP_NO_PROXY_BYPASS,
        0);

    WINHTTP_PROXY_INFOW  ProxyInfo = { 0 };
    WINHTTP_AUTOPROXY_OPTIONS AutoProxyOptions = { 0 };
    //AutoProxyOptions.dwAutoDetectFlags = WINHTTP_AUTO_DETECT_TYPE_DHCP | WINHTTP_AUTO_DETECT_TYPE_DNS_A;

    AutoProxyOptions.lpszAutoConfigUrl = pArgv[1];
    AutoProxyOptions.dwFlags = WINHTTP_AUTOPROXY_CONFIG_URL | WINHTTP_AUTOPROXY_RUN_OUTPROCESS_ONLY;// | WINHTTP_AUTOPROXY_NO_CACHE_CLIENT | WINHTTP_AUTOPROXY_NO_CACHE_SVC;

    // If obtaining the PAC script requires NTLM/Negotiate
    // authentication, then automatically supply the client
    // domain credentials.
    AutoProxyOptions.fAutoLogonIfChallenged = FALSE;

    //
    // Call WinHttpGetProxyForUrl with our target URL. If auto-proxy
    // succeeds, then set the proxy info on the request handle.
    // If auto-proxy fails, ignore the error and attempt to send the
    // HTTP request directly to the target server (using the default
    // WINHTTP_ACCESS_TYPE_NO_PROXY configuration, which the request
    // handle will inherit from the session).
    //
    if (WinHttpGetProxyForUrl(hHttpSession,
        L"http://www.google.com/",
        &AutoProxyOptions,
        &ProxyInfo))
    {
        printf("... WinHttpGetProxyForUrl was successful\r\n");
    }
    else {
        printf("... WinHttpGetProxyForUrl failed with error: %d\r\n", GetLastError());
    }

    WinHttpCloseHandle(hHttpSession);

	return 0;
}