typedef class PeFile;

class MitigationlessPe {
protected:
	std::unique_ptr<PeFile> PePhys;
	std::wstring Path;
	bool CFG;
	bool ASLR;
	bool SecureExceptions;
	bool DEP;
	bool Relocations;
public:
	PeFile* GetPeFile() const { return this->PePhys.get(); }
	bool HasCfg() const { return this->CFG; }
	bool HasAslr() const { return this->ASLR; }
	bool HasDEP() const { return this->DEP; }
	bool HasRelocations() const { return this->Relocations; }
	bool HasSecureExceptions() const { return this->SecureExceptions; }
	void Print() const;
	static std::vector<MitigationlessPe> ScanFiles(const std::wstring& TargetPath, uint64_t qwMitigationFlags, uint32_t & rdwTotalPe);
	MitigationlessPe(const std::wstring& PePath, uint64_t qwMitigationFlags);
};

#define SEARCH_FLAG_ASLR 0x1
#define SEARCH_FLAG_SECURE_EXCEPTIONS 0x2
#define SEARCH_FLAG_CFG 0x4
#define SEARCH_FLAG_DEP 0x8