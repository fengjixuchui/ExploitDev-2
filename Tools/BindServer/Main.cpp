#define WIN32_MEAN_AND_LEAN
#include <WinSock2.h>
#include <windows.h>
#include <stdio.h>
#include <stdint.h>

#pragma comment(lib, "ws2_32.lib")

int32_t wmain(int32_t nArgc, const wchar_t *pArgv[]) {
    WSADATA WsaData = { 0 };

    if ((WSAStartup(0x202, &WsaData)) == 0) {
        struct sockaddr_in LocalSin = { 0 };
        SOCKET ListenerSock;

        LocalSin.sin_family = AF_INET;
        LocalSin.sin_addr.s_addr = INADDR_ANY;
        LocalSin.sin_port = htons(9000);

        ListenerSock = socket(AF_INET, SOCK_STREAM, 0);

        if (ListenerSock != INVALID_SOCKET) {
            if (bind(ListenerSock, (struct sockaddr*)&LocalSin, sizeof(LocalSin)) != SOCKET_ERROR) {
                if (listen(ListenerSock, 5) != SOCKET_ERROR) {
                    while (1) {
                        struct sockaddr_in ClientSin = { 0 };
                        int nSinSize = sizeof(ClientSin);
                        SOCKET ClientSock = accept(ListenerSock, (struct sockaddr*)&ClientSin, &nSinSize);

                        if (ClientSock != INVALID_SOCKET) {
                            char Buffer[10000] = { 0 };
                            int32_t retval = recv(ClientSock, Buffer, sizeof(Buffer), 0);

                            if (retval != SOCKET_ERROR) {
                                if (retval == 0) {
                                    printf("Server: Client closed connection.\n");
                                    closesocket(ClientSock);
                                    continue;

                                }

                                printf("Server: Received %d bytes, data \"%s\" from client\n", retval, Buffer);
                            }
                        }
                    }
                }
            }
        }
    }

    return 0;
}
