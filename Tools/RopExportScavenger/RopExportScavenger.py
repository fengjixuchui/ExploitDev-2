#! /usr/bin/python
import sys
import pefile

if len(sys.argv) < 2:
    print("[*] Usage: <target DLL file path> <optional: --export-name [export name to force delta from]> [Gadget RVA(s)/VAs]")
    exit()

TargetFilePath=sys.argv[1]

print("... opening file at " + TargetFilePath + " to hunt for nearest exports to specified gadgets")

pe = pefile.PE(TargetFilePath)

if not hasattr(pe, 'DIRECTORY_ENTRY_EXPORT'):
    print("... EAT missing. Invalid target DLL " + TargetFilePath)
    sys.exit(-1)
    
GadgetRvaList = []
GadgetCount = 0
ArgIndex = 0

for Arg in sys.argv:
    if ArgIndex > 1: 
        if ArgIndex == 2 and Arg == "--export-name":
            OverrideExportName = sys.argv[ArgIndex + 1]
            ArgIndex += 1
        else:
            CurrentGadgetAddress = int(sys.argv[ArgIndex][2:], 16)
            
            if CurrentGadgetAddress > pe.OPTIONAL_HEADER.ImageBase:
                if CurrentGadgetAddress < (pe.OPTIONAL_HEADER.ImageBase + pe.OPTIONAL_HEADER.SizeOfImage):
                    CurrentGadgetAddress = (CurrentGadgetAddress - pe.OPTIONAL_HEADER.ImageBase)
                    
            GadgetRvaList.append(CurrentGadgetAddress)
            GadgetCount += 1
    ArgIndex += 1

#print("... target gadget list:")

#for GadgetRva in GadgetRvaList:
#    print("0x%08x" % (GadgetRva))

ExportDict = {}
ExportRvaList = []

# Make a list of all export RVAs as well as a dictionary with RVAs as keys and names as values.
# While buiilding the list/dictionary, find the export which is LOWER (or equal) than the target gadget but as close as possible

for exp in pe.DIRECTORY_ENTRY_EXPORT.symbols:
    if exp.name:
        #print("%s - 0x%08x" % (exp.name.decode('utf-8'), exp.address))
        ExportDict[exp.address] = exp.name.decode('utf-8')
        ExportRvaList.append(exp.address)

print("... calculating nearest exports with forward deltas...")

for GadgetRva in GadgetRvaList:
    NearestRva = -1
    NearestDelta = -1

    for ExportRva in ExportRvaList:
        CurrentDelta = -1
        
        if GadgetRva >= ExportRva:
            CurrentDelta = (GadgetRva - ExportRva)
             
        if NearestRva == -1:
            if CurrentDelta >= 0:
                NearestRva = ExportRva
                NearestDelta = CurrentDelta
        else:
            if CurrentDelta >= 0:
                if CurrentDelta < NearestDelta:
                    NearestRva = ExportRva
                    NearestDelta = CurrentDelta

    if NearestRva == -1:
        print("... failed to identify any exports which came prior to gadget at 0x%08x" %(GadgetRva))
    else:
        print("... nearest forward export to gadget at 0x%08x was %s at 0x%08x (delta of 0x%08x)" %(GadgetRva, ExportDict[NearestRva], NearestRva, NearestDelta))
        
print("... calculating nearest exports with forward deltas...")

for GadgetRva in GadgetRvaList:
    NearestRva = 0
    NearestDelta = 0

    for ExportRva in ExportRvaList:
        CurrentDelta = 0
        
        if GadgetRva < ExportRva:
            CurrentDelta = (GadgetRva - ExportRva)
             
        if NearestRva == 0:
            if CurrentDelta < 0:
                NearestRva = ExportRva
                NearestDelta = CurrentDelta
        else:
            if CurrentDelta < 0:
                if CurrentDelta > NearestDelta:
                    NearestRva = ExportRva
                    NearestDelta = CurrentDelta

    if NearestRva == 0:
        print("... failed to identify any exports which came prior to gadget at 0x%08x" %(GadgetRva))
    else:
        print("... nearest backward export to gadget at 0x%08x was %s at 0x%08x (delta of 0x%08x)" %(GadgetRva, ExportDict[NearestRva], NearestRva, NearestDelta))