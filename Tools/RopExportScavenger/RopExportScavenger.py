#! /usr/bin/python
import sys
import pefile

if len(sys.argv) < 2:
    print("[*] Usage: [Target DLL file path] [Gadget RVA]")
    exit()

TargetFilePath=sys.argv[1]
GadgetRva = int(sys.argv[2][2:], 16)

print("... opening file at " + TargetFilePath + " to hunt for nearest export to gadget " + str(hex(GadgetRva)))

pe = pefile.PE(TargetFilePath)

if not hasattr(pe, 'DIRECTORY_ENTRY_EXPORT'):
    print("... EAT missing. Invalid target DLL " + TargetFilePath)
    sys.exit(-1)

ExportDict = {}
RvaList = []
NearestRva = -1
NearestDelta = -1

# Make a list of all export RVAs as well as a dictionary with RVAs as keys and names as values.
# While buiilding the list/dictionary, find the export which is LOWER (or equal) than the target gadget but as close as possible

for exp in pe.DIRECTORY_ENTRY_EXPORT.symbols:
    if exp.name:
        #print("%s - 0x%08x" % (exp.name.decode('utf-8'), exp.address))
        ExportDict[exp.address] = exp.name.decode('utf-8')
        RvaList.append(exp.address)
        CurrentDelta = -1
        
        if GadgetRva >= exp.address:
            CurrentDelta = (GadgetRva - exp.address)
             
        if NearestRva == -1:
            if CurrentDelta >= 0:
                NearestRva = exp.address
                NearestDelta = CurrentDelta
        else:
            if CurrentDelta >= 0:
                if CurrentDelta < NearestDelta:
                    NearestRva = exp.address
                    NearestDelta = CurrentDelta

if NearestRva == -1:
    print("... failed to identify any exports which came prior to gadget at 0x%08x" %(GadgetRva))
else:
    print("... nearest export to gadget at 0x%08x was %s at 0x%08x (delta of 0x%08x)" %(GadgetRva, ExportDict[NearestRva], NearestRva, NearestDelta))