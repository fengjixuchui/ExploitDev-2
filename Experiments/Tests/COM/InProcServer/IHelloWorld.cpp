#include <Windows.h>
#include <stdint.h>
#include <stdio.h>
#include <comdef.h>

#include "IHelloWorld.hpp"
#include "DllServer.h"

//////////////////////////////////////////////////////////////////////
// Construction/Destruction

IHelloWorld::IHelloWorld() {
    RefCount = 0;
    gdwDllLockCount++;
}

IHelloWorld::~IHelloWorld() {
    gdwDllLockCount--;
}


//////////////////////////////////////////////////////////////////////
// IUnknown methods

STDMETHODIMP_(ULONG) IHelloWorld::AddRef() {
    return ++RefCount;               // Increment this object's reference count.
}

STDMETHODIMP_(ULONG) IHelloWorld::Release()
{
    ULONG uRet = --RefCount;             // Decrement this object's reference count.

    if (0 == RefCount)             // Releasing last reference?
        delete this;

    return uRet;
}

STDMETHODIMP IHelloWorld::QueryInterface(REFIID riid, void** ppv)
{
    HRESULT hrRet = S_OK;

    // Check that ppv really points to a void*.

    if (IsBadWritePtr(ppv, sizeof(void*)))
        return E_POINTER;

    // Standard QI initialization - set *ppv to NULL.

    *ppv = NULL;

    // If the client is requesting an interface we support, set *ppv.

    if (InlineIsEqualGUID(riid, IID_IUnknown))
    {
        *ppv = (IUnknown*)this;
    }
    else if (InlineIsEqualGUID(riid, __uuidof(IHelloWorld)))
    {
        *ppv = (IHelloWorld*)this;
    }
    else
    {
        hrRet = E_NOINTERFACE;
    }

    // If we're returning an interface pointer, AddRef() it.

    if (S_OK == hrRet)
    {
        ((IUnknown*)*ppv)->AddRef();
    }

    return hrRet;
}


//////////////////////////////////////////////////////////////////////
// ISimpleMsgBox methods

STDMETHODIMP IHelloWorld::HelloWorld(BSTR bsMessageText) {
    MessageBoxW(nullptr, bsMessageText, bsMessageText, MB_OK);

    return S_OK;
}
