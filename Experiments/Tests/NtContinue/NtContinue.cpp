#include <Windows.h>
#include <stdio.h>
#include <stdint.h>

typedef NTSTATUS(NTAPI* NtContinue_t)(CONTEXT *);

int32_t wmain(int32_t nArgc, const wchar_t* pArgv[]) {
	NtContinue_t NtContinue = (NtContinue_t)GetProcAddress(GetModuleHandleA("ntdll.dll"), "NtContinue");
	printf("... successfully resolved NtContinue to 0x%p\r\n", NtContinue);
	CONTEXT NewCtx = { 0 };
	NewCtx.ContextFlags = CONTEXT_ALL;

	if (GetThreadContext(GetCurrentThread(), &NewCtx)) {
		printf("... current RCX: 0x%p\r\n", NewCtx.Rcx);
		printf("... current RSP: 0x%p\r\n", NewCtx.Rsp);
		//uint8_t* pArtificialStack = (uint8_t *)VirtualAlloc(nullptr, 0x10000, MEM_COMMIT|MEM_RESERVE, PAGE_READWRITE);
		uint8_t* pArtificialStack = (uint8_t*)HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, 0x10000);
		pArtificialStack += 0x2008;
		printf("... new RSP: 0x%p\r\n", pArtificialStack);
		NewCtx.Rcx = (DWORD64)"notepad.exe";
		NewCtx.Rdx = SW_SHOW;
		NewCtx.Rip = (DWORD64)WinExec;
		NewCtx.Rsp = (DWORD64)pArtificialStack;
		//NewCtx.Rsp -= 0x8;
		NewCtx.ContextFlags = CONTEXT_ALL;
		NTSTATUS NtStatus = NtContinue(&NewCtx);
		printf("... NtStatus from NtContinue: 0x%08x\r\n", NtStatus);
	}

	return 0;
}